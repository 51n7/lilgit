@import './reset.scss';

@font-face {
  font-family: 'Menlo';
  src: url('../fonts/Menlo-Regular.woff2') format('woff2'),
    url('../fonts/Menlo-Regular.woff') format('woff');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

$bg: #22272e;
$white: #acb9c6;
$grey-light: #adbac7;
$grey: #768390;
$red: #f47067;
$green: #8ddb8c;
// $blue-light: #6bb5fd;
$blue: #6cb6ff;

::-webkit-scrollbar {
  display: none;
}

body {
  background-color: $bg;
  color: #dfe5ff;
  font-family: 'Menlo';
  font-size: 15px;
}

html,
body,
#app {
  min-height: 100vh;
  box-shadow: inset 0px 0px 0px 2px $white;
}

.pad {
  padding: 1.5rem;
}

h1 {
  text-align: center;
  margin: 1rem 0;
  font-size: 2.5rem;
}

button {
  padding: 0.5em 1em;
  cursor: pointer;
}

.text-red {
  color: $red;
}

.text-green {
  color: $green;
}

.text-blue {
  color: $blue;
}

.text-grey {
  color: $grey;
}

.repo-container {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
}

.repo-list {
  border: 1px solid $grey;
  padding: 1.5rem;
  border-radius: 4px;
  min-width: 50%;
}

.closeRepo {
  position: absolute;
  top: 0;
  right: 0;
}

header {
  margin-block-end: 1.5rem;

  .row {
    display: flex;

    // &:not(:first-child) {
    //   margin-block-start: 0.25rem;
    // }

    .title {
      min-width: 6rem;
      color: $grey;
    }

    .details {
      flex: 1;
    }
  }
}

.view-status,
.view-branches {
  ul {
    padding-left: 1rem;

    li {
      position: relative;

      &::before {
        position: absolute;
        right: calc(100% + 6px);
      }

      span {
        display: inline-block;
        padding-inline: 0.4em;
      }
    }

    .current::before {
      content: '\25B8';
    }

    [data-status='D']::before {
      content: '-';
    }
  }
}

.view-graph {
  .line {
    display: flex;
    justify-content: space-between;

    .ellipsis {
      display: flex;
      flex: 1;
      overflow: hidden;
    }

    .message {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      flex: 1;
    }

    span {
      // display: inline-block;
      margin-inline: 0.5rem;

      &:first-child {
        margin-inline-start: 0;
      }
    }
  }
}

ul {
  li span {
    display: inline-block;
    padding-inline: 0.25rem;
  }
}

nav {
  position: fixed;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgb($bg, 60%);

  fieldset,
  .loading {
    background-color: $bg;
    min-width: 75%;
    border: 2px solid $white;
  }

  .loading {
    min-height: 3.5rem;
    display: flex;
    align-items: center;
    padding: 1rem;
  }

  .loading:after {
    content: '...';
    overflow: hidden;
    display: inline-block;
    animation: ellipsis steps(4, end) 900ms infinite;
    width: 0px;
  }

  @keyframes ellipsis {
    to {
      width: 2em;
    }
  }

  legend {
    padding-inline: 0.5rem;
  }

  input {
    width: 100%;
    background-color: transparent;
    color: #dfe5ff;
    outline: none;
  }
}

.dot-nav {
  position: fixed;
  bottom: 10px;
  left: 50%;
  z-index: 1;
  transform: translateX(-50%);
  display: flex;

  span {
    width: 8px;
    height: 8px;
    background-color: $grey;
    display: block;
    border-radius: 100%;
    margin-inline-start: 0.5rem;
  }

  @for $i from 1 through 3 {
    &[data-view='#{$i}'] span:nth-child(#{$i}) {
      background-color: $white;
    }
  }
}

.error-notification {
  position: fixed;
  top: 10px;
  right: 10px;
  background-color: $red;
  color: #ffffff;
  padding: 0.5em 1em;
  text-align: left;
  width: 50%;
  z-index: 9999;
  transition: transform 250ms ease-in-out, opacity 250ms ease-in-out;
  transform: translateY(calc(-100% - 10px));
  opacity: 0;

  &.show {
    transform: translateY(0);
    opacity: 1;
  }
}

.resizable-box {
  position: fixed;
  width: 100%;
  background-color: #1d2127;
  box-shadow: inset 0px 0px 0px 2px $white;
  bottom: 0;
  padding: 1rem;
}

.resizable-handle {
  position: absolute;
  top: 0;
  left: 0;
  transform: translateY(-50%);
  width: 100%;
  height: 8px;
  background-color: transparent;
  cursor: ns-resize;

  // .resizing & {
  //   background-color: $grey;
  // }
}
